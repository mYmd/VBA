Option Explicit

'================================================================================
    ' Sub showSz                    デバッグウィンドウに配列のサイズを表示する
    ' Sub showM                     デバッグウィンドウに２次元配列を表示する
'================================================================================

'デバッグウィンドウに配列のサイズを表示する
Sub showSz(ByRef M As Variant)
Dim mes$, i%, total&
    If VarType(M) = 0 Then Debug.Print " vbEmpty:": Exit Sub
    If Dimension(M) = 0 Then Debug.Print " Scalar": Exit Sub
    mes = "": total = 1
    For i = 1 To Dimension(M) Step 1
        mes = mes & "[Dim" & i & "]: " & LBound(M, i) & " -> " & UBound(M, i) & "  "
        total = total * (1 + UBound(M, i) - LBound(M, i))
    Next i
    mes = mes & ": Total Size = " & total
    Debug.Print mes
End Sub

'デバッグウィンドウに２次元配列を表示する
Sub showM(ByRef M As Variant, Optional r As Variant, Optional c As Variant)
    Dim SR&, ER&, Sc&, EC&, i&, j&, MaxL%(), TMP() As Variant, Msg$
    
    If Dimension(M) = 0 Then Debug.Print M: Exit Sub
    If LBound(M) > UBound(M) Then Debug.Print "#Empty Matrix#": Exit Sub
    If Dimension(M) = 1 Then showV M, r: Exit Sub
    If Dimension(M) > 2 Then Stop: Exit Sub
    If IsMissing(r) = True Then
        SR = LBound(M, 1): ER = UBound(M, 1)
    Else
        If r = 0 Then
            Debug.Print "#Empty Matrix#"
            Exit Sub
        End If
        If r > 0 Then
            SR = LBound(M, 1)
            ER = SR + r - 1
        Else
            SR = UBound(M, 1) + r + 1
            ER = UBound(M, 1)
        End If
    End If
    If IsMissing(c) = True Then
        Sc = LBound(M, 2): EC = UBound(M, 2)
    Else
        If c = 0 Then
            Debug.Print "#Empty Matrix#"
            Exit Sub
        End If
        If c > 0 Then
            Sc = LBound(M, 2)
            EC = Sc + c - 1
        Else
            Sc = UBound(M, 2) + c + 1
            EC = UBound(M, 2)
        End If
    End If
    If SR < LBound(M, 1) Then SR = LBound(M, 1)
    If ER > UBound(M, 1) Then ER = UBound(M, 1)
    If Sc < LBound(M, 2) Then Sc = LBound(M, 2)
    If EC > UBound(M, 2) Then EC = UBound(M, 2)
    If (100000 < (ER - SR + 1) * (EC - Sc + 1)) Then
        Msg = "サイズ超過。縦*横 <=100000以内"
        i = MsgBox(Msg, vbOKOnly, "サイズ超過")
        Exit Sub
    End If
    ReDim MaxL(Sc To EC)
    ReDim TMP(SR To ER, Sc To EC)
    For j = Sc To EC Step 1
        For i = SR To ER Step 1
            TMP(i, j) = M(i, j)
            If IsError(M(i, j)) = True Then TMP(i, j) = "Error!"
            If MaxL(j) < LenW(Trim(TMP(i, j))) Then MaxL(j) = LenW(Trim(TMP(i, j)))
        Next i
    Next j
    For i = SR To ER Step 1
        For j = Sc To EC - 1 Step 1
            Debug.Print Spc(2 + MaxL(j) - LenW(Trim(TMP(i, j)))); Trim(TMP(i, j));
        Next j
        Debug.Print Spc(2 + MaxL(UBound(TMP, 2)) - LenW(Trim(TMP(i, UBound(TMP, 2))))); Trim(TMP(i, UBound(TMP, 2)))
    Next i
End Sub
    
'デバッグウィンドウにベクトルを表示する
Private Sub showV(v As Variant, Optional r As Variant)
    Dim SR&, ER&, i&, Msg$
    
    If Dimension(v) = 0 Then Debug.Print v: Exit Sub
    If Dimension(v) = 2 Then showM v, r: Exit Sub
    If LBound(v) > UBound(v) Then Debug.Print "#Empty Vector#": Exit Sub
    If IsMissing(r) = True Then
        SR = LBound(v): ER = UBound(v)
    Else
        If r = 0 Then Debug.Print "#Empty Vector#": Exit Sub
        If r > 0 Then SR = LBound(v): ER = SR + r - 1 Else SR = UBound(v) + r + 1: ER = UBound(v)
    End If
    If SR < LBound(v) Then SR = LBound(v)
    If ER > UBound(v) Then ER = UBound(v)
    If (10000 < ER - SR + 1) Then
        Msg = "サイズ超過。長さ 10000個以内。"
        i = MsgBox(Msg, vbOKOnly, "サイズ超過")
        Exit Sub
    End If
    For i = SR To ER - 1 Step 1
        If IsError(v(i)) = True Then Debug.Print Spc(2); "Error!" Else Debug.Print Spc(2); Trim(v(i));
    Next i
    If IsError(v(ER)) = True Then Debug.Print Spc(2); "Error!" Else Debug.Print Spc(2); Trim(v(ER))
End Sub

Private Function LenW(ByRef s As String) As Long
    LenW = LenB(StrConv(s, vbFromUnicode))
End Function
